
        __                                  ______                      __            ___     
  _____/ /_  _________  ____ ___  ____ _   / __/ /___ _      __   _____/ /___  ______/ (_)___ 
 / ___/ __ \/ ___/ __ \/ __ `__ \/ __ `/  / /_/ / __ \ | /| / /  / ___/ __/ / / / __  / / __ \\
/ /__/ / / / /  / /_/ / / / / / / /_/ /  / __/ / /_/ / |/ |/ /  (__  ) /_/ /_/ / /_/ / / /_/ /
\___/_/ /_/_/   \____/_/ /_/ /_/\__,_/  /_/ /_/\____/|__/|__/  /____/\__/\__,_/\__,_/_/\____/ 


This is a fork of Chromaflows that will now function for Linux and Mac users. The original repo can be found at https://github.com/coffeecodeconverter/ChromaFlowStudio, please go there if you are looking for Windows supoport.

Big thanks to coffeecodeconverter for Chroma Flow Studio , I hope to make some use of it now that it's running on my Ubuntu server.




==============================
System Requirements:
==============================
- ~300MB for the basic app, but ~1.7GB in Drive Space for all other libraries and dependancies (mainly torch)
- Python 3.10 (may also work in 3.11, but hasnt been tested)
- Pip 24.3.1
- VENV or Conda installed (optional, but HIGHLY, and STRONGLY recommended)
- ChromaDB 0.5.20+ to support hnsw config specified in metadata - tested and works on v0.6.1 too (latest as of writing this)
- Chroma-hnswlib==0.7.6+
- Check the requirements.txt for package version info 




PLEASE NOTE:
The "chromaviz" and "vite" folders are taken from the "chromaviz Github project" (https://github.com/mtybadger/chromaviz)
and arent required to run Chroma Flow Studio, but are a nice addition if you want to visualise your data





=====================
Install Instructions
=====================
NOTE:
I've only tested this on Ubuntu, lmk if you run into issues with your distro or on MacOS.


EASY METHOD:
- Run the create_venv.sh script to configure the virtual environment and follow the instructions.
- When finished, run "./run.sh" to launch Chroma Flow Studio
- Enjoy!

====================
OTHER NOTES
====================

The "import-files" sub-folder contains test .json files 
for 20, 50, and 2000 dummy documents respectively, for testing the import functions
and seeing how a system handles that much data. 


The "learn" sub-folder contains useful notes about embedding models, and chromadb syntax. 
It also contains a list of test scripts that get you up and running for your own projects. 
they isolate each task per script, like just creating a collection, just adding a document, 
just deleting a document, searching for a document, etc. 
you can copy and paste from them to quickly build your own python clients. 


Edit the "appsettings.json" file to configure the app for your environment.
